(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{60:function(e,o,s){"use strict";s.r(o);var u=s(0),t=Object(u.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,o=e.$createElement,s=e._self._c||o;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"鼠标相关事件总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#鼠标相关事件总结","aria-hidden":"true"}},[e._v("#")]),e._v(" 鼠标相关事件总结")]),s("p",[e._v("点击select标签元素的时候，会弹出下拉。然而当option中没有元素时，就不希望弹出下拉（比如在某些浏览器中，点击select会默认出一个罩层效果，而此时没有数据选择的话，弹出比较不友好）。")]),s("p",[e._v("首先想到是利用click事件控制，发现仍然会有下拉出现...实际这个是mousedown事件控制的。")]),s("p",[e._v("这里就说明下click和mousedown、mouseup。规范要求，只有在同一个元素上相继触发 mousedown 和 mouseup 事件，才会触发 click 事件；如果 mousedown 或 mouseup 中的一个被取消，就不会触发 click 事件。")]),s("p",[e._v("这句话也很好理解，有时候我们在浏览网页时，鼠标在一个按钮或者链接上按下了，但是突然却又改了主意，此时我们一般会移开鼠标，在另一个空白处松开鼠标哈哈~相信这个大家经常上网都有经验。实际这个就利用了click事件要求在同一个元素相继触发mousedown 和 mouseup 事件。")]),s("p",[e._v("这里再介绍下鼠标的各个事件：")]),s("p",[e._v("DOM3 级事件中定义了9个鼠标事件，简介如下。\nclick：在用户单击主鼠标按钮（一般是左边的按钮）或者按下回车键时触发。这一点对确保易访问性很重要，意味着onclick事件处理程序既可以通过键盘也可以通过鼠标执行。")]),s("p",[e._v("dblclick：在用户双击主鼠标按钮（一般是左边的按钮）时触发。从技术上说，这个事件并不是DOM2级事件规范中规定的，但鉴于它得到了广泛支持，所以DOM3 级事件将其纳入了标准。")]),s("p",[e._v("mousedown：在用户按下了任意鼠标按钮时触发。不能通过键盘触发这个事件。")]),s("p",[e._v("mouseenter：在鼠标光标从元素外部首次移动到元素范围之内时触发。这个事件不冒泡，而且在光标移动到后代元素上不会触发。DOM2级事件并没有定义这个事件，但 DOM3级事件将它纳入了规范。IE、Firefox 9+和 Opera支持这个事件。")]),s("p",[e._v("mouseleave：在位于元素上方的鼠标光标移动到元素范围之外时触发。这个事件不冒泡，而且在光标移动到后代元素上不会触发。DOM2级事件并没有定义这个事件，但 DOM3级事件将它 纳入了规范。IE、Firefox 9+和 Opera支持这个事件。")]),s("p",[e._v("mousemove：当鼠标指针在元素内部移动时重复地触发。不能通过键盘触发这个事件。")]),s("p",[e._v("mouseout：在鼠标指针位于一个元素上方，然后用户将其移入另一个元素时触发。又移入的另一个元素可能位于前一个元素的外部，也可能是这个元素的子元素。不能通过键盘触发这个事件。")]),s("p",[e._v("mouseover：在鼠标指针位于一个元素外部，然后用户将其首次移入另一个元素边界之内时触 发。不能通过键盘触发这个事件。")]),s("p",[e._v("mouseup：在用户释放鼠标按钮时触发。不能通过键盘触发这个事件。 页面上的所有元素都支持鼠标事件。除了 mouseenter 和 mouseleave，所有鼠标事件都会冒泡， 也可以被取消，而取消鼠标事件将会影响浏览器的默认行为。取消鼠标事件的默认行为还会影响其他事 件，因为鼠标事件与其他事件是密不可分的关系。")])])}],!1,null,null,null);o.default=t.exports}}]);